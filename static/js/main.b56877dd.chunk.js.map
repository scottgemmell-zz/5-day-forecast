{"version":3,"sources":["constants/index.js","reducers/index.js","components/FieldInput.jsx","components/Controls.jsx","actions/index.js","utils/helper.js","components/Day.jsx","components/Forecasts.jsx","containers/AppContainer.jsx","index.js","assets/svgs/vendor/amcharts/animated/cloudy.svg","assets/svgs/vendor/amcharts/animated/rainy-5.svg","assets/svgs/vendor/amcharts/animated/day.svg","assets/svgs/vendor/amcharts/animated/thunder.svg","assets/svgs/vendor/amcharts/animated/snowy-6.svg","assets/svgs/spinner.svg"],"names":["FORECASTS_FAILURE","FORECASTS_LOADING","combineReducers","forecasts","state","arguments","length","undefined","defaultState","action","type","Object","objectSpread","defineProperty","payload","name","value","city","country","data","forecastsFailure","failure","forecastsLoading","loading","FieldInput","_ref","id","title","helpText","placeholderText","handleChange","handleBlur","hideLabel","modifier","react_default","a","createElement","FormGroup","controlId","ControlLabel","className","FormControl","placeholder","onChange","onBlur","bsClass","concat","Feedback","HelpBlock","defaultProps","Controls","handleCityBlur","handleCityChange","handleCountryBlur","handleCountryChange","handleSubmit","handleReset","hasErrors","Grid","Form","inline","onSubmit","components_FieldInput","Button","onClick","bsStyle","disabled","Alert","bool","getTempStatus","temp","num","parseFloat","Day","val","_ref$item","item","dt_txt","weather","main","Col","xs","moment","format","description","src","rainyDay","alt","cloudyDay","clearDay","sunnyDay","snowyDay","Forecasts","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","filterByDays","filter","_k","v","bind","assertThisInitialized","inherits","createClass","key","_this$props","_this$props$forecasts","list","filteredList","spinner","map","i","components_Day","Component","connect","AppContainer","getForecasts","e","preventDefault","getForecastData","cityUpdated","_e$target","target","countryUpdated","_e$target2","reset","_this$props2","components_Controls","components_Forecasts","dispatch","fetch","then","response","ok","Error","statusText","json","forecastsSuccess","catch","logger","createLogger","collapsed","diff","composeEnhancers","composeWithDevTools","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","containers_AppContainer","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b56877dd.chunk.js","sourcesContent":["export const API_KEY = \"e9d4c67ad81c4d73f2ad231f6092f6c3\";\n\nexport const CITY_UPDATED = \"CITY_UPDATED\";\nexport const COUNTRY_UPDATED = \"COUNTRY_UPDATED\";\nexport const RESET = \"RESET\";\nexport const SET_OPEN_DATA = \"SET_OPEN_DATA\";\nexport const FORECASTS_SUCCESS = \"FORECASTS_SUCCESS\";\nexport const FORECASTS_FAILURE = \"FORECASTS_FAILURE\";\nexport const FORECASTS_LOADING = \"FORECASTS_LOADING\";","import { combineReducers } from \"redux\";\nimport { \n\tCITY_UPDATED, \n\tCOUNTRY_UPDATED, \n\tRESET,\n    FORECASTS_SUCCESS,\n    FORECASTS_FAILURE,\n    FORECASTS_LOADING,\n} from \"../constants\";\nimport defaultState from \"../store/initialStates.json\";\n\nconst setForecastsReducer = (state = defaultState, action) => {\n\n    switch (action.type) {\n        case CITY_UPDATED:\n            return {\n                ...state,\n                [action.payload.name]: action.payload.value,\n            };\n        case COUNTRY_UPDATED:\n            return {\n                ...state,\n                [action.payload.name]: action.payload.value,\n            };\n        case RESET: \n            return {\n                ...state,\n                city: \"\",\n                country: \"\",\n                data: \"\",\n            };\n        case FORECASTS_SUCCESS:\n            return {\n                ...state,\n                data: action.forecasts,\n            };\n        default:\n            return state;\n\t}\n};\n\nexport function forecastsFailure(state = false, action) {\n    switch (action.type) {\n        case FORECASTS_FAILURE:\n            return action.failure;\n        default:\n            return state;\n    }\n}\n\nexport function forecastsLoading(state = false, action) {\n    switch (action.type) {\n        case FORECASTS_LOADING:\n            return action.loading;\n\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n\tforecasts: setForecastsReducer,\n    forecastsFailure,\n    forecastsLoading,\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tFormGroup, FormControl, ControlLabel, HelpBlock,\n} from \"react-bootstrap\";\n\nconst FieldInput = ({ id, name, value, title, helpText, placeholderText, handleChange, handleBlur, hideLabel, modifier }) => {\n\treturn (\n\t\t<FormGroup\n\t\t\tcontrolId={id}\n\t\t>\n\t\t\t<ControlLabel className={hideLabel ? \"u-visibility-hidden\" : \"\"}>\n\t\t\t\t{title}\n\t\t\t</ControlLabel>\n\t\t\t{\" \"}\n\t\t\t<FormControl\n\t\t\t\ttype=\"text\" \n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tplaceholder={placeholderText}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonBlur={handleBlur}\n\t\t\t\tbsClass={`form-control ${modifier}`}\n\t\t\t/>\n\t\t\t<FormControl.Feedback />\n\n\t\t\t{helpText && <HelpBlock>\n\t\t\t\t{helpText}\n\t\t\t</HelpBlock>}\n\n\t\t</FormGroup>\n\t);\n};\n\nFieldInput.defaultProps = {\n\thelpText: \"\",\n\tplaceholderText: \"\",\n};\n\nFieldInput.propTypes = {\n\tid: PropTypes.string.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tvalue: PropTypes.string,\n\thelpText: PropTypes.string,\n\tplaceholderText: PropTypes.string,\n\thandleChange: PropTypes.func,\n};\n\nexport default FieldInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Alert, Grid, Form, Button } from \"react-bootstrap\";\nimport FieldInput from \"./FieldInput\";\n\nconst Controls = ({ handleCityBlur, handleCityChange, handleCountryBlur, handleCountryChange, handleSubmit, handleReset, hasErrors }) => {    \n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<Grid>\n\t\t\t\t<h1 className=\"page-title header__title\">\n\t\t\t\t\t\t5-day forecast\n\t\t\t\t</h1>\n\n\t\t\t\t<section>\n\t\t\t\t\t<h2 className=\"section-title u-visibility-hidden\">\n\t\t\t\t\t\tControls\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div className=\"c-controls\">\n\t\t\t\t\t\t<Form inline onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className=\"c-controls__inputs\">\n\t\t\t\t\t\t\t\t<FieldInput \n\t\t\t\t\t\t\t\t\tid=\"fieldCity\" \n\t\t\t\t\t\t\t\t\tname=\"city\"\n\t\t\t\t\t\t\t\t\tplaceholderText=\"Glasgow\" \n\t\t\t\t\t\t\t\t\ttitle=\"Enter a City\"\n\t\t\t\t\t\t\t\t\thandleBlur={handleCityBlur}\n\t\t\t\t\t\t\t\t\thandleChange={handleCityChange}\n\t\t\t\t\t\t\t\t\thideLabel={true} \n\t\t\t\t\t\t\t\t\tmodifier=\"c-controls__input c-controls__input--city\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t<FieldInput \n\t\t\t\t\t\t\t\t\tid=\"fieldCountry\" \n\t\t\t\t\t\t\t\t\tname=\"country\"\n\t\t\t\t\t\t\t\t\tplaceholderText=\"UK\" \n\t\t\t\t\t\t\t\t\ttitle=\"Enter a Country\"\n\t\t\t\t\t\t\t\t\thandleBlur={handleCountryBlur}\n\t\t\t\t\t\t\t\t\thandleChange={handleCountryChange}\n\t\t\t\t\t\t\t\t\thideLabel={true} \n\t\t\t\t\t\t\t\t\tmodifier=\"c-controls__input c-controls__input--country\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"c-controls__actions\">\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\ttype=\"reset\" \n\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\tbsStyle=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={!hasErrors}\n\t\t\t\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tGet 5-day forecast\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{!hasErrors && <Alert bsStyle=\"info\" bsClass=\"c-controls__alert alert\">\n\t\t\t\t\t\t\t\tPlease enter a <strong>City</strong> and a <strong>Country</strong>\n\t\t\t\t\t\t\t</Alert>}\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</Grid>\n\t\t</header>   \n\t);\n};\n\nControls.propTypes = {\n\thandleCityBlur: PropTypes.func, \n\thandleCityChange: PropTypes.func,  \n\thandleCountryBlur: PropTypes.func, \n\thandleCountryChange: PropTypes.func, \n\thandleSubmit: PropTypes.func, \n\thandleReset: PropTypes.func, \n\thasErrors: PropTypes.string,\n};\n\nexport default Controls;\n","import { \n\tAPI_KEY,\n\tCITY_UPDATED, \n\tCOUNTRY_UPDATED, \n\tRESET,\n\tSET_OPEN_DATA,\n\tFORECASTS_SUCCESS,\n\tFORECASTS_FAILURE,\n\tFORECASTS_LOADING,\n} from \"../constants\";\n\nexport const cityUpdated = city => ({\n\ttype: CITY_UPDATED,\n\tpayload: city\n});\n\nexport const countryUpdated = country => ({\n\ttype: COUNTRY_UPDATED,\n\tpayload: country\n});\n\nexport const reset = () => ({\n\ttype: RESET\n});\n\nexport const setOpenData = data => ({\n\ttype: SET_OPEN_DATA,\n\tpayload: data\n});\n\nexport const forecastsFailure = bool => ({\n\ttype: FORECASTS_FAILURE,\n\tfailure: bool\n});\n\nexport const forecastsLoading = bool => ({\n\ttype: FORECASTS_LOADING,\n\tloading: bool\n});\n\nexport const forecastsSuccess = forecasts => ({ \n\ttype: FORECASTS_SUCCESS,\n\tforecasts\n});\n\nexport const getForecastData = ({city, country}) => (dispatch) => {\n\tdispatch(forecastsLoading(true));\n\n\tfetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&appid=${API_KEY}`)\n\t\t.then((response) => {\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow Error(response.statusText);\n\t\t\t}\n\t\t\tdispatch(forecastsLoading(false));\n\t\t\tdispatch(forecastsFailure(false));\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((forecasts) => dispatch(forecastsSuccess(forecasts)))\n\t\t.catch(\n\t\t\t() => {\n\t\t\t\tdispatch(forecastsFailure(true));\n\t\t\t}\n\t\t);\n};","import moment from \"moment\";\n\nexport const toDayOfTheWeek = (val) => {\n    return moment(val, \"YYYY-MM-DD HH:mm:ss\").format(\"dddd\");\n}\n\nexport const getTempStatus = (temp) => {\n    let status = \"\";\n    const num = parseFloat(temp);\n    if(num > 8) {\n        status = \"hot\";\n    } else if(num > 4){\n        status = \"average\";\n    } else {\n        status = \"cold\";\n    }\n    return status;\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"react-bootstrap\";\nimport { toDayOfTheWeek, getTempStatus } from \"../utils/helper.js\";\nimport cloudyDay from \"../assets/svgs/vendor/amcharts/animated/cloudy.svg\";\nimport rainyDay from \"../assets/svgs/vendor/amcharts/animated/rainy-5.svg\";\nimport sunnyDay from \"../assets/svgs/vendor/amcharts/animated/day.svg\";\nimport clearDay from \"../assets/svgs/vendor/amcharts/animated/thunder.svg\";\nimport snowyDay from \"../assets/svgs/vendor/amcharts/animated/snowy-6.svg\";\n\nconst Day = ({ item: { dt_txt, weather, main: { temp } } }) => {\n\treturn (\n\t\t<div className=\"c-day day@small day@medium\">\n\t\t\t<Col xs={6} className=\"c-day__body\">\n\t\t\t\t<dl>\n\t\t\t\t\t<dt>\n\t\t\t\t\t\tDay:\n\t\t\t\t\t</dt>\n\t\t\t\t\t<dd className=\"c-day__dayofweek\">\n\t\t\t\t\t\t{toDayOfTheWeek(dt_txt)}\n\t\t\t\t\t</dd>\n\t\t\t\t\t<dt>\n\t\t\t\t\t\tWeather:\n\t\t\t\t\t</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t{weather[0].main === \"Clear\" && <div>Clear <br/><small className=\"notice\">! No weather icon for clear so using thunder</small></div>}\n\t\t\t\t\t\t{weather[0].main !== \"Clear\" && <div>{weather[0].main}</div>}\n\t\t\t\t\t</dd>\n\t\t\t\t\t<dt>\n\t\t\t\t\t\tDescription:\n\t\t\t\t\t</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t{weather[0].description}\n\t\t\t\t\t</dd>\n\t\t\t\t\t<dt>\n\t\t\t\t\t\tTemperature:\n\t\t\t\t\t</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<span className={`a-temp a-temp--${getTempStatus(temp)}`}>{temp}&deg;</span>\n\t\t\t\t\t</dd>\n\t\t\t\t</dl>\n\t\t\t</Col>\n\t\t\t<Col xs={6} className=\"c-day__head\">\n\t\t\t\t{weather[0].main === \"Rain\" && <div>\n\t\t\t\t\t<img src={rainyDay} alt=\"Rain\" />\n\t\t\t\t</div>}\n\t\t\t\t{weather[0].main === \"Clouds\" && <div>\n\t\t\t\t\t<img src={cloudyDay} alt=\"Clouds\" />\n\t\t\t\t</div>}\n\t\t\t\t{weather[0].main === \"Clear\" && <div>\n\t\t\t\t\t<img src={clearDay} alt=\"Clear\" />\n\t\t\t\t</div>}\n\t\t\t\t{weather[0].main === \"Sunny\" && <div>\n\t\t\t\t\t<img src={sunnyDay} alt=\"Sunny\" />\n\t\t\t\t</div>}\n\t\t\t\t{weather[0].main === \"Snowy\" && <div>\n\t\t\t\t\t<img src={snowyDay} alt=\"Snowy\" />\n\t\t\t\t</div>}\n\t\t\t</Col>\n\t\t</div>\n\t);\n};\n\nDay.propTypes = {\n\titem: PropTypes.shape({\n\t\tdt_txt: PropTypes.string.isRequired,\n\t\tweather: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tmain: PropTypes.string.isRequired,\n\t\t\t\tdescription: PropTypes.string.isRequired,\n\t\t\t})\n\t\t).isRequired,\n\t\tmain: PropTypes.shape({\n\t\t\ttemp: PropTypes.string.number,\n\t\t}),\n\t}).isRequired,\n};\n\nexport default Day;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Day from \"./Day\";\nimport spinner from \"../assets/svgs/spinner.svg\";\n\nexport class Forecasts extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.filterByDays = this.filterByDays.bind(this);\n\t}\n\n\tfilterByDays = data => {\n\t\treturn (\n\t\t\tdata.filter((_k, v) => {\n\t\t\t\treturn (v % 8 === 0) ? true : false;\n\t\t\t})\n\t\t);\n\t};\n\n\trender() {\n\t\tconst { \n\t\t\tforecasts: { \n\t\t\t\tlist, \n\t\t\t\tcity: { name }\n\t\t\t},  \n\t\t\tforecastsLoading,\n\t\t\tforecastsFailure\n\t\t} = this.props;\n\t\tconst filteredList = this.filterByDays(list);\n\n\t\tif (forecastsFailure === true) {\n\t\t\treturn <div></div>;\n\t\t}\n\n\t\tif (forecastsLoading === true) {\n\t\t\treturn <div className=\"u-spinner\"><img src={spinner} alt=\"Loading...\" /></div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h2 className=\"section-title\">\n\t\t\t\t\tForecasts <em>for</em> {name}\n\t\t\t\t</h2>\n\n\t\t\t\t<div className=\"forecasts l-panels l-panels@small l-panels@medium l-panels@large\">\n\t\t\t\t\t{filteredList\n\t\t\t\t\t\t.map((item, i) => {\n\t\t\t\t\t\t\treturn <Day key={i} item={item} />;\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nForecasts.defaultProps = {\n\tforecasts: {\n\t\tlist: [],\n\t\tcity: {\n\t\t\tname: \"\",\n\t\t}\n\t}\n};\n\nForecasts.propTypes = {\n\tforecasts: PropTypes.shape({\n\t\tlist: PropTypes.arrayOf(\n\t\t\tPropTypes.object.isRequired,\n\t\t),\n\t\tcity: PropTypes.shape({\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\n\t\t}),\n\t}),\n\tforecastsLoading: PropTypes.bool,\n\tforecastsFailure: PropTypes.bool,\n\n};\n\nconst mapStateToProps = (state) => ({\n\tforecasts: state.forecasts.data,\n\tforecastsFailure: state.forecastsFailure,\n\tforecastsLoading: state.forecastsLoading\n});\n\nexport default connect(\n\tmapStateToProps,\n)(Forecasts);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert, Grid } from 'react-bootstrap';\nimport Controls from \"../components/Controls.jsx\";\nimport { cityUpdated, countryUpdated, reset, getForecastData } from \"../actions\";\nimport Forecasts from \"../components/Forecasts.jsx\";\n\nclass AppContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleCityChange = this.handleCityChange.bind(this);\n        this.handleCountryChange = this.handleCountryChange.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n\thandleCityChange(e) {\n        const { cityUpdated } = this.props;\n        const { name, value } = e.target;\n        cityUpdated({ name, value });\n    }\n \n    handleCountryChange(e) {\n\t\tconst { countryUpdated } = this.props;\n        const { name, value } = e.target;\n        countryUpdated({ name, value });\n    }\n\n    handleReset() {\n\t\tconst { reset } = this.props;\n        reset();\n    }\n\n    getForecasts = (e) => {\n        e.preventDefault();\n        const { getForecastData, city, country } = this.props;\n        getForecastData({city, country});\n    }\n    \n    render() {\n        const { city, country, data, forecastsFailure } = this.props;\n\n        return (\n            <div className=\"app\">\n                <Controls \n                    handleCityChange={this.handleCityChange} \n                    handleCountryChange={this.handleCountryChange} \n                    handleCityBlur={this.handleCityChange} \n                    handleCountryBlur={this.handleCountryChange} \n                    handleReset={this.handleReset} \n                    handleSubmit={this.getForecasts} \n                    hasErrors={city && country} \n                />\n                <Grid>\n                    {(data !== \"\") && <Forecasts />}\n\n                    {(forecastsFailure === true) && \n                    <div>\n                        <h2 className=\"section-title\">Error :(</h2>\n                        <Alert bsStyle=\"danger\" bsClass=\"c-controls__alert alert\">\n                            Invalid <strong>City</strong> and/or <strong>Country</strong>\n                        </Alert>\n                    </div>}\n                </Grid>\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    city: state.forecasts.city,\n    country: state.forecasts.country,\n    data: state.forecasts.data,\n    forecastsFailure: state.forecastsFailure,\n    forecastsLoading: state.forecastsLoading\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        cityUpdated,\n        countryUpdated,\n        reset,\n        getForecastData,\n    },\n)(AppContainer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { \n    createStore, \n    applyMiddleware\n} from \"redux\";\nimport { createLogger } from \"redux-logger\"\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport \"./assets/scss/master.scss\";\nimport AppContainer from \"./containers/AppContainer\";\n\nconst logger = createLogger({\n\t// ...options\n\tcollapsed: true,\n\tdiff: true,\n});\n\nconst composeEnhancers = composeWithDevTools({\n    // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst store = createStore(\n    reducers, \n    /* preloadedState, */ \n    composeEnhancers(\n        applyMiddleware(thunk, logger),\n        // other store enhancers if any\n    )\n);\n\nReactDOM.render(\n    <Provider \n\t    store={store}\n\t>\n        <AppContainer />\n    </Provider>, \n    document.getElementById(\"root\")\n);","module.exports = __webpack_public_path__ + \"static/media/cloudy.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-5.2bd23641.svg\";","module.exports = __webpack_public_path__ + \"static/media/day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-6.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.99d7ceaa.svg\";"],"sourceRoot":""}